/** * * ━━━━━━神兽出没━━━━━━ * 　　　┏┓　　　┏┓ * 　　┏┛┻━━━┛┻┓ * 　　┃　　　　　　　┃ * 　　┃　　　━　　　┃ * 　　┃　┳┛　┗┳　┃ * 　　┃　　　　　　　┃ * 　　┃　　　┻　　　┃ * 　　┃　　　　　　　┃ * 　　┗━┓　　　┏━┛Code is far away from bug with the animal protecting * 　　　　┃　　　┃    神兽保佑,代码无bug * 　　　　┃　　　┃ * 　　　　┃　　　┗━━━┓ * 　　　　┃　　　　　　　┣┓ * 　　　　┃　　　　　　　┏┛ * 　　　　┗┓┓┏━┳┓┏┛ * 　　　　　┃┫┫　┃┫┫ * 　　　　　┗┻┛　┗┻┛ * * ━━━━━━感觉萌萌哒━━━━━━ * by larsonzhong@163.com */package com.larson.album.presenter;import android.os.AsyncTask;import com.larson.album.data.LoadPhotoToViewModel;import com.larson.album.data.LoadResultListener;import com.larson.album.util.FileUtils;import com.larson.album.view.LoadPhotoToViewInterface;import com.larson.album.view.LoadPhotoToViewModelInterface;import java.util.ArrayList;import java.util.LinkedHashMap;/** * 相册Presenter * Created by larsonzhong on 2017/6/20 0020. */public class LoadPhotoToViewPresenter {	private LoadPhotoToViewInterface mPhotoLoadView;	private LoadPhotoToViewModelInterface mPhotoLoadModel = new LoadPhotoToViewModel();	public LoadPhotoToViewPresenter(LoadPhotoToViewInterface mPhotoLoadView) {		this.mPhotoLoadView = mPhotoLoadView;	}	/**	 * 用来初始化listview	 * 步骤：	 * 通过mPhotoLoadModel获取照片的地址信息集合	 * 通过mPhotoLoadView将获取的地址信息集合装载到listview中去	 */	public void InitListView() {		mPhotoLoadView.showLoadingData();		mPhotoLoadModel.loadMediaFilePathList(new LoadResultListener() {			@Override			public void LoadSuccess(LinkedHashMap<String, ArrayList<String>> filemap) {				mPhotoLoadView.LoadDataFinish();				//在这里将数据集合装载到adapter中去				mPhotoLoadView.LoadListviewSuccess(filemap);			}			@Override			public void LoadFailure() {				//数据加载失败，显示无照片页面				mPhotoLoadView.LoadlistviewFail();			}		});	}	/**	 * 创建一个可以移动的照片集	 */	public void CreateMoveGroup(int x, int y, String path) {		mPhotoLoadView.CreateMoveGroup(x, y, path);	}	/**	 * 弹出删除的对话框	 */	public void ShowDeleteDialog() {		mPhotoLoadView.CreateDeleteDialog();	}	/**	 * 删除选择图片的任务	 */	public void executeDeleteFileTask() {		new DeleteFileTask().execute();	}	/**	 * 将选中的文件直接删除	 */	private class DeleteFileTask extends AsyncTask<Void, Void, Void> {		@Override		protected Void doInBackground(Void... params) {			FileUtils.deleteFilelist(mPhotoLoadModel.GetNeedMoveFile());			return null;		}		@Override		protected void onPostExecute(Void aVoid) {			super.onPostExecute(aVoid);			LinkedHashMap<String, ArrayList<String>> filemap = mPhotoLoadModel.GetDataChangedFile();			mPhotoLoadView.LoadListviewSuccess(filemap);		}	}}